name: Build Windows x64
on:
  workflow_dispatch:
  push:
    branches: [ main, develop, perplexity ]
    paths:
      - 'apps/brightpal-app/**'
      - 'packages/**'

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      NODE_OPTIONS: --max-old-space-size=8192
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          # Removed: submodules: recursive
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true
          
      - name: Install NSIS
        run: |
          choco install nsis -y
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install pnpm globally
        run: npm install -g pnpm
        
      - name: Show directory structure
        shell: cmd
        run: |
          echo === Root Directory Structure ===
          dir
          echo Current directory: %CD%
          echo.
          echo === Workspace Configuration ===
          type pnpm-workspace.yaml
          echo.
          echo === Package.json Dependencies ===
          findstr "foliate-js" apps\brightpal-app\package.json
          echo.
          echo === Packages Directory ===
          dir packages
          
      - name: Install dependencies
        shell: cmd
        run: |
          echo Current working directory: %CD%
          echo === Before Installation ===
          echo Workspace config:
          type pnpm-workspace.yaml
          echo.
          echo Packages directory:
          dir packages
          echo.
          echo Installing workspace dependencies from root...
          pnpm install
          echo Dependencies installed successfully
          echo.
          echo === After Installation ===
          echo Installed packages:
          pnpm list --depth=0
          
      - name: Verify workspace setup
        shell: cmd
        run: |
          echo === Verifying Workspace Setup ===
          pnpm list --depth=0
          echo.
          echo === Checking foliate-js package ===
          pnpm list foliate-js
          echo.
          echo === Workspace packages ===
          pnpm list --filter=@brightpal/brightpal-app
          
      - name: Build frontend
        shell: cmd
        run: |
          cd apps\brightpal-app
          echo Building frontend from: %CD%
          pnpm build
          
      - name: Check build configuration
        shell: cmd
        run: |
          cd apps\brightpal-app
          echo === Checking package.json build scripts ===
          type package.json
          echo.
          echo === Checking tauri.conf.json ===
          type src-tauri\tauri.conf.json
          echo.
          echo === Checking if tauri CLI is available ===
          pnpm tauri --version 2>nul || echo Tauri CLI not found in pnpm
          npx tauri --version 2>nul || echo Tauri CLI not found in npx
          echo.
          echo === Testing basic tauri command ===
          cd src-tauri
          echo Current directory: %CD%
          cargo --version
          echo.
          echo === Checking Cargo.toml ===
          type Cargo.toml
          
      - name: Build Windows x64 app (with detailed logging)
        shell: cmd
        env:
          TAURI_SKIP_UPDATER_COMPATIBILITY_CHECK: true
          RUST_LOG: debug
        run: |
          cd apps\brightpal-app
          echo Building Windows app from: %CD%
          echo === Checking build script ===
          type package.json | findstr "build-win-x64"
          echo.
          echo === Starting build process ===
          pnpm build-win-x64
          echo Build command completed with exit code: %ERRORLEVEL%
          if %ERRORLEVEL% neq 0 (
            echo Build failed, checking for partial artifacts...
            if exist "src-tauri\target" (
              echo Target directory exists, listing contents:
              dir src-tauri\target /s
            ) else (
              echo No target directory found
            )
            exit /b %ERRORLEVEL%
          )
          
      - name: Show build artifacts
        shell: cmd
        if: always()
        run: |
          echo === Build Artifacts Analysis ===
          echo.
          echo Current directory: %CD%
          echo.
          echo === Checking for ROOT target directory ===
          if exist "target" (
            echo ROOT target directory found!
            echo === Root target directory structure ===
            dir target
            echo.
            echo === Looking for Windows release directory ===
            if exist "target\x86_64-pc-windows-msvc\release" (
              echo Windows release directory found!
              dir target\x86_64-pc-windows-msvc\release
              echo.
              echo === Looking for executables ===
              dir target\x86_64-pc-windows-msvc\release\*.exe 2>nul || echo No .exe files found in release
              echo.
              echo === Looking for bundle directory ===
              if exist "target\x86_64-pc-windows-msvc\release\bundle" (
                echo Bundle directory found!
                dir target\x86_64-pc-windows-msvc\release\bundle /s
              ) else (
                echo Bundle directory not found in root target
              )
            ) else (
              echo Windows release directory not found in root target
              echo Available target directories:
              dir target\* 2>nul || echo No subdirectories in target
            )
          ) else (
            echo No ROOT target directory found
          )
          echo.
          echo === Also checking app-level target directory ===
          cd apps\brightpal-app
          if exist "src-tauri\target" (
            echo App-level target directory found!
            dir src-tauri\target /s
          ) else (
            echo No app-level target directory found
          )
          
      - name: Upload executable (if bundle failed)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: brightpal-executable
          path: |
            target/x86_64-pc-windows-msvc/release/brightpal.exe
            target/x86_64-pc-windows-msvc/release/*.exe
          retention-days: 30
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: brightpal-windows-x64
          path: target/x86_64-pc-windows-msvc/release/bundle/
          retention-days: 30